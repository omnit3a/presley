(load "std/base.pre")

(def-func (file-print filename args)
  (if (file-exists? filename)
    ((let file (open-output-file filename))
     (map (lambda (x) ((write x file) (write " " file))) (reverse args))
     (close-output-port file))
    ((write-line "File does not exist"))
  )
  (file-exists? filename)
)

(def-func (file-print-ln filename args)
  (if (file-exists? filename)
    ((let file (open-output-file filename))
     (map (lambda (x) ((write x file) (write " " file))) (reverse args))
     (write-line "" file)
     (close-output-port file))
    ((write-line "File does not exist"))
  )
  (file-exists? filename)
)

(def-func (file-read filename)
  (if (file-exists? filename)
    ((let file (open-input-file filename))
     (let out (read file))
     (close-input-port file))
    ((write-line "File does not exist")
     (let out #f))
  )
  out
)